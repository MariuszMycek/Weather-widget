{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ab6b4f608f3b91e9a010.hot-update.js","sources":["webpack:///./components/WeatherWidget/WeatherWigdet.js"],"sourcesContent":["import React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\n\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from '../Spinner/Spinner';\nimport WidgetBody from './WidgetBody/WidgetBody';\n\nimport './WeatherWidget.scss';\n\nconst API = 'https://dev-weather-api.azurewebsites.net/api/city';\n\nclass WeatherWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      citiesData: null,\n      isLoading: true,\n      cityDataLoading: false,\n      activeCity: {\n        id: null,\n        name: null,\n      },\n      cityData: [],\n      activeDayIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then(res => res.json())\n      .then(data => this.setState({ citiesData: data, isLoading: false }))\n      .catch(() => this.setState({ citiesData: null, isLoading: false }));\n  }\n\n  onSelectHandler = activeCity => {\n    const date = moment().format('YYYY[-]MM[-]DD');\n    this.setState({ activeCity, cityDataLoading: true });\n    this.setActiveDayIndex(0);\n    fetch(`${API}/${activeCity.id}/weather?date=${date}`)\n      .then(res => res.json())\n      .then(cityData => {\n        this.setState({ cityData, cityDataLoading: false });\n      })\n      .catch(() => this.setState({ cityData: null, cityDataLoading: false }));\n  };\n\n  setActiveDayIndex = activeDayIndex => {\n    this.setState({ activeDayIndex });\n  };\n\n  renderSpinner = () => (\n    <div className=\"widget-loader\">\n      <Spinner height={50} />\n    </div>\n  );\n\n  renderWidget = () => {\n    const {\n      citiesData,\n      activeCity,\n      cityData,\n      activeDayIndex,\n      cityDataLoading,\n    } = this.state;\n    return (\n      <Container fluid>\n        <div className=\"weather-widget\">\n          <DropdownButton\n            id=\"dropdown-basic-button\"\n            title=\"Choose a city \"\n            variant=\"info\"\n          >\n            {citiesData.map(city => (\n              <Dropdown.Item\n                key={city.id}\n                onClick={() => this.onSelectHandler(city)}\n                active={activeCity.id === city.id}\n              >\n                {city.name}\n              </Dropdown.Item>\n            ))}\n          </DropdownButton>\n          {cityDataLoading ? (\n            <div className=\"weather-widget__spinner-wrapper\">\n              <Spinner height={26} />\n            </div>\n          ) : null}\n          <div className=\"weather-widget__widget-body-wrapper\">\n            <WidgetBody\n              cityData={cityData}\n              activeCity={activeCity}\n              setActiveDayIndex={this.setActiveDayIndex}\n              activeDayIndex={activeDayIndex}\n              cityDataLoading={cityDataLoading}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n\n  renderErrorInfo = () => (\n    <div className=\"widget-no-data-info\">Sorry, we cannot get cities list</div>\n  );\n\n  render() {\n    const { isLoading, citiesData } = this.state;\n\n    if (isLoading) {\n      return this.renderSpinner();\n    }\n    if (citiesData) {\n      return this.renderWidget();\n    }\n    return this.renderErrorInfo();\n  }\n}\n\nexport default WeatherWidget;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAjCA;AAmCA;AAAA;AAAA;AACA;AACA;AArCA;AAsCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAvCA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAxFA;AAyFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAxFA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AATA;AAFA;AAaA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAyEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;AAxGA;AACA;AA0GA;;;;A","sourceRoot":""}